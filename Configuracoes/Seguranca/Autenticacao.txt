cad_cli

Cadastro de clientes, com as tabelas: clientes, users e produtos e pedidos

Obs.: Complico as coisas se usar a tabela com nome funcionarios ao inves de users e seus campos padronizados.

Todas as tabelas principais (clientes, produtos e pedidos) precisam conter o campo user_id para relacionamento com users
e uso na autenticação.

Criar banco e importar o script do raiz
Atente para o tamanho do campo password caso vá usar autenticação bcrypt. Use 255.

Configurar banco e rotas

Gerar código com

cd /backup/www/cake/cad_cli
bin/cake bake all clientes
bin/cake bake all users
bin/cake bake all produtos
bin/cake bake all pedidos

Em ambiente linux dê as devidas permissões em tmp e logs

Acessar pelo navegador:
http://localhost/cake/cad_cli

Implementação da Autenticação partindo do tutorial oficial:
http://book.cakephp.org/3.0/en/tutorials-and-examples/blog-auth-example/auth.html

Ajustar o model src/Model/Table/UsersTable.php
Responsável por localizar, salvar e validar os dados dos usuários.

Ajustar a função validationDefault():

    public function validationDefault(Validator $validator)
    {
        return $validator
            ->notEmpty('username', 'A username is required')
            ->notEmpty('password', 'A password is required')
            ->notEmpty('role', 'A role is required')
            ->add('role', 'inList', [
                'rule' => ['inList', ['admin', 'author']],
                'message' => 'Please enter a valid role'
            ]);
    }

Adapte o src/Controller/AppController.php assim:

    public function initialize()
    {
        parent::initialize();

        $this->loadComponent('RequestHandler');
        $this->loadComponent('Flash');
        $this->loadComponent('Auth', [
			'authorize' => ['Controller'],
            'loginRedirect' => [
                'controller' => 'Clientes',
                'action' => 'index'
            ],
            'logoutRedirect' => [
                'controller' => 'Pages',
                'action' => 'display',
                'home'
            ]
        ]);
    }

	public function isAuthorized($user)
	{
		// Admin can access every action
		if (isset($user['role']) && $user['role'] === 'admin') {
		    return true;
		}

		// Default deny
		return false;
	}

    public function beforeFilter(Event $event)
    {
        $this->Auth->allow(['index', 'view', 'display']);
    }

Adicione ao início da classe do src/Controller/UsersController.php

<?php
namespace App\Controller;

use App\Controller\AppController;
use Cake\Event\Event;    //Adicionar esta linha

	public function beforeFilter(Event $event)
	{
		parent::beforeFilter($event);
		// Allow users to register and logout.
		// You should not add the "login" action to allow list. Doing so would
		// cause problems with normal functioning of AuthComponent.
		$this->Auth->allow(['add', 'logout']);
	}

	public function login()
	{
		if ($this->request->is('post')) {
		    $user = $this->Auth->identify();
		    if ($user) {
		        $this->Auth->setUser($user);
		        return $this->redirect($this->Auth->redirectUrl());
		    }
		    $this->Flash->error(__('Invalid username or password, try again'));
		}
	}

	public function logout()
	{
		return $this->redirect($this->Auth->logout());
	}


Adicionar o hash das senhas:
src/Model/Entity/User.php

namespace App\Model\Entity;

use Cake\Auth\DefaultPasswordHasher;	//ADICIONAR ESTA LINHA
use Cake\ORM\Entity;

class User extends Entity
{

    // ...

    protected function _setPassword($password)
    {
        return (new DefaultPasswordHasher)->hash($password);
    }

    // ...
}

Adicionar a view/template para src/Template/Users/login.ctp file and add the following lines:

<!-- File: src/Template/Users/login.ctp -->

<div class="users form">
<?= $this->Flash->render('auth') ?>
<?= $this->Form->create() ?>
    <fieldset>
        <legend><?= __('Please enter your username and password') ?></legend>
        <?= $this->Form->input('username') ?>
        <?= $this->Form->input('password') ?>
    </fieldset>
<?= $this->Form->button(__('Login')); ?>
<?= $this->Form->end() ?>
</div>

Ajuste os controllers:

src/Controller/ClientesController.php
src/Controller/ProdutosController.php
src/Controller/PedidosController.php

Em add e edit

	public function add()
	{
		$article = $this->Articles->newEntity();
		if ($this->request->is('post')) {
		    $article = $this->Articles->patchEntity($article, $this->request->data);
		    // Added this line
		    $article->user_id = $this->Auth->user('id');	//ADD ESTA LINHA
		    // You could also do the following
		    //$newData = ['user_id' => $this->Auth->user('id')];
		    //$article = $this->Articles->patchEntity($article, $newData);
		    if ($this->Articles->save($article)) {
		        $this->Flash->success(__('Your article has been saved.'));
		        return $this->redirect(['action' => 'index']);
		    }
		    $this->Flash->error(__('Unable to add your article.'));
		}
		$this->set('article', $article);
	}

Estas linhas:
			$cliente->user_id = $this->Auth->user('id');	//ADD ESTA LINHA
			$produto->user_id = $this->Auth->user('id');	//ADD ESTA LINHA
			$pedido->user_id = $this->Auth->user('id');	//ADD ESTA LINHA

Da mesma forma no edit()

Adicionar ao início do src/Controller/ClientesController.php, ProdutosController e PedidosController

	public function isAuthorized($user)
	{
		// All registered users can add clientes
		if ($this->request->action === 'add') {
		    return true;
		}

		// The owner of an clientes can edit and delete it
		if (in_array($this->request->action, ['edit', 'delete'])) {
		    $clienteId = (int)$this->request->params['pass'][0];
		    if ($this->Clientes->isOwnedBy($clienteId, $user['id'])) {
		        return true;
		    }
		}

		return parent::isAuthorized($user);
	}

Similar para o Pedidos:
	public function isAuthorized($user)
	{
		// All registered users can add pedidos
		if ($this->request->action === 'add') {
		    return true;
		}

		// The owner of an clientes can edit and delete it
		if (in_array($this->request->action, ['edit', 'delete'])) {
		    $pedidoId = (int)$this->request->params['pass'][0];
		    if ($this->Pedidos->isOwnedBy($pedidoId, $user['id'])) {
		        return true;
		    }
		}

		return parent::isAuthorized($user);
	}


Adicionar ao src/Model/Table/ClientesTable.php ao final e do
src/Model/Table/ProdutosTable.php e Pedidos

	public function isOwnedBy($clienteId, $userId)
	{
		return $this->exists(['id' => $clienteId, 'user_id' => $userId]);
	}

	public function isOwnedBy($produtoId, $userId)
	{
		return $this->exists(['id' => $produtoId, 'user_id' => $userId]);
	}


Experimente acessar agora pela web (feche o navegador, caso esteja aberto).

Acesse
http://localhost/cake/cad_cli/users/add

E cadastre um cliente, funcionario, produto e pedido.

